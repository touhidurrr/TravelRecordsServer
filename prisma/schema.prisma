// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

model User {
  id                Int                   @id @default(sequence())
  username          String                @unique
  email             String                @unique
  name              String
  hash              String
  createdAt         DateTime              @default(now())
  updatedAt         DateTime              @updatedAt
  accounts          Account[]
  ownedRecords      TravelRecord[]
  travelRecordLinks UsersOnTravelRecord[]
  Expense           Expense[]
}

model Account {
  id           Int           @id @default(sequence())
  name         String
  balance      Float         @default(0)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  owner        User          @relation(fields: [ownerId], references: [id])
  ownerId      Int
  transactions Transaction[]
  Expense      Expense[]

  @@unique([name, ownerId])
}

model Transaction {
  id        Int      @id @default(sequence())
  amount    Float
  ref       String?
  createdAt DateTime @default(now())
  account   Account  @relation(fields: [accountId], references: [id])
  accountId Int
}

model Expense {
  id             Int           @id @default(sequence())
  title          String
  amount         Float
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  paidby         User          @relation(fields: [payerId], references: [id])
  payerId        Int
  account        Account?      @relation(fields: [accountId], references: [id])
  accountId      Int?
  TravelRecord   TravelRecord? @relation(fields: [travelRecordId], references: [id])
  travelRecordId Int?
}

model TravelRecord {
  id                Int                   @id @default(sequence())
  title             String
  from              String
  to                String
  createdAt         DateTime              @default(now())
  updatedAt         DateTime              @updatedAt
  owner             User                  @relation(fields: [ownerId], references: [id])
  ownerId           Int
  expenses          Expense[]
  travelRecordLinks UsersOnTravelRecord[]
}

model UsersOnTravelRecord {
  id             Int          @id @default(sequence())
  user           User         @relation(fields: [userId], references: [id])
  userId         Int
  travelRecordId Int
  travelRecord   TravelRecord @relation(fields: [travelRecordId], references: [id])
  joined         DateTime     @default(now())

  @@unique([userId, travelRecordId])
  @@map("UserJoinedTravelRecord")
}
